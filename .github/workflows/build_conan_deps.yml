name: Build Conan dependencies

on:
  pull_request:
    branches: 
    - master

jobs:
  Linux:
    runs-on: ubuntu-latest

    env:
      CONAN_LOGIN_USERNAME: gh-actions
      CONAN_PASSWORD: ${{ secrets.CONAN_TOKEN}}
      CONAN_REMOTE_NAME: conan_coin
      CONAN_REMOTE_URL: https://artifactory.coin.agh.edu.pl/artifactory/api/conan/conan-local

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Wayland
        run: |
          sudo apt-get install -y libwayland-dev wayland-protocols libxkbcommon-dev libegl1-mesa-dev

      - name: Download Clang
        uses: egor-tensin/setup-clang@v1.4
        with:
          version: 19
          platform: x64
          
      - name: Download Conan2
        run: pip install conan==2.*

      - name: Setup Conan
        run: |
          conan remote add $CONAN_REMOTE_NAME $CONAN_REMOTE_URL --force
          conan remote login $CONAN_REMOTE_NAME $CONAN_LOGIN_USERNAME -p $CONAN_PASSWORD

      - name: "GCC 14: Setup"
        run: |
          export CC=gcc-14
          export CXX=g++-14
          conan profile detect --force
    
      - name: "GCC 14, Debug: Build Conan dependencies"
        run: |
          cmake ${{ github.workspace }} -B ${{ github.workspace }}/build -G Ninja -DCMAKE_BUILD_TYPE=Debug -DARCHIMEDES_CONAN_ARGS="-o glfw/*:with_wayland=False" -DARCHIMEDES_FORCE_CONAN_INSTALL=TRUE -DCMAKE_C_COMPILER=gcc-14 -DCMAKE_CXX_COMPILER=g++-14
          cmake ${{ github.workspace }} -B ${{ github.workspace }}/build -G Ninja -DCMAKE_BUILD_TYPE=Debug -DARCHIMEDES_CONAN_ARGS="-o glfw/*:with_wayland=True" -DARCHIMEDES_FORCE_CONAN_INSTALL=TRUE -DCMAKE_C_COMPILER=gcc-14 -DCMAKE_CXX_COMPILER=g++-14
      
      - name: Write Conan Linux cache
        uses: actions/cache@v4
        with:
          path: ~/.conan2/p
          key: archimedes_conan2_cache_${{ runner.os }}_${{ hashFiles('conanfile.py') }}_${{ github.run_id }}
          
#   windows:
#     runs-on: windows-2025

#     env:
#       CONAN_LOGIN_USERNAME: chris++
#       CONAN_PASSWORD: ${{ secrets.CONAN_TOKEN }}
#       CONAN_REMOTE_NAME: conan_coin
#       CONAN_REMOTE_URL: https://artifactory.coin.agh.edu.pl/artifactory/api/conan/conan-local

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4
        
#       - name: Set up Conan2
#         run: pip install conan==2.*
          
#       - name: Test GCC & CMake
#         run: |
#           gcc --version
#           g++ --version
#           clang --version
#           clang++ --version
#           cmake --version
#           cmake --system-information -G "Visual Studio 17 2022" | sls "^CMAKE_(C|CXX)_COMPILER "
#           $env:CC="gcc"
#           $env:CXX="g++"
#           cmake --system-information -G "Ninja" | sls "^CMAKE_(C|CXX)_COMPILER "
#           conan profile detect --force
#           $env:CC="clang"
#           $env:CXX="clang++"
#           cmake --system-information -G "Ninja" | sls "^CMAKE_(C|CXX)_COMPILER "
#           conan profile detect --force
