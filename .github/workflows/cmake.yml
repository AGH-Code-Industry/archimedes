name: CMake

on:
  push:
    branches: 
    - master
  pull_request:
    branches: 
    - master

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Conan
      id: conan
      uses: turtlebrowser/get-conan@main

    - name: Set up GCC
      uses: egor-tensin/setup-gcc@v1
      with:
        version: 13
        platform: x64


    - name: Conan version
      run: echo "${{ steps.conan.outputs.version }}"

    - name: GitHub Cache Action for conan
      id: cache-conan
      uses: actions/cache@v3
      env:
        cache-name: cache-conan-modules
      with:
        path: ~/.conan2
        key: ${{ runner.os }}-builder-${{ env.cache-name }}-${{ hashFiles('conanfile.py') }}
        restore-keys: ${{ runner.os }}-builder-${{ env.cache-name }}-

    #- name: Detect Conan Profile
    #  run: |
    #      conan profile detect --force

    #- name: Conan Profile Change Compiler Standard
    #  run: |
    #      sed -i 's/compiler.cppstd=gnu17/compiler.cppstd=gnu20/g' ~/.conan2/profiles/default
    #      conan profile show 

    #- name: Install Conan Pkg's
    #  run: conan install ${{github.workspace}} --output-folder=${{github.workspace}}/build --build=missing -c tools.system.package_manager:mode=install -c tools.system.package_manager:sudo=True
    
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ./archimedes_tests


