name: CMake

on:
  push:
    branches: 
    - master
  pull_request:
    branches: 
    - master

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Conan
      id: conan
      uses: turtlebrowser/get-conan@main

    - name: Set up GCC
      uses: egor-tensin/setup-gcc@v1
      with:
        version: 13
        platform: x64
        
    - name: Conan version
      run: echo "${{ steps.conan.outputs.version }}"

    - name: GitHub Cache Action for Conan
      id: cache-conan
      uses: actions/cache@v3
      env:
        cache-name: cache-conan-modules
      with:
        path: ~/.conan2
        key: ${{ runner.os }}-builder-${{ env.cache-name }}-${{ hashFiles('conanfile.py') }}
        restore-keys: ${{ runner.os }}-builder-${{ env.cache-name }}-

    - name: Configure CMake
      run: |
          cmake ${{github.workspace}} -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Run Tests
      working-directory: ${{github.workspace}}/build
      run: ./archimedes_tests


